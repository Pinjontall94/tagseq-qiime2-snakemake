# Snakemake file to QC tag-sequence reads
configfile: "config.yaml"

import io 
import os
import pandas as pd
import pathlib
from snakemake.exceptions import print_exception, WorkflowError

#----SET VARIABLES----#

PROJ = config["proj_name"]
INPUTDIR = config["raw_data"]
SCRATCH = config["scratch"]

# use glob statement to find all samples and then take a set of the SAMPLELIST to get unique names to pass to snakemake
SAMPLE_LIST,NUMS = glob_wildcards("raw_data/{sample}_{num}.fastq.gz")
SAMPLE_SET = set(SAMPLE_LIST)
SET_NUMS = set(NUMS)
OUTPUTDIR = config["outputDIR"]

#----DEFINE RULES----#

rule all:
  input:
    trimmedData = expand("{scratch}/trimmed/{sample}_{num}.fastq.gz", scratch= SCRATCH, sample=SAMPLE_SET, num=SET_NUMS), 
#html = expand("{scratch}/qc/fastqc/{sample}_{suf}_{num}_fastqc.html", scratch = SCRATCH, sample = SAMPLE_LIST, suf = SAMPLE_SUFFIX, num = [1,2]),
    # Trimmed read output
 #   r1 = expand("{scratch}/trimmed/{sample}_1.fastq.gz", scratch = SCRATCH, sample = SAMPLE_LIST),
  #  r2 = expand("{scratch}/trimmed/{sample}_2.fastq.gz", scratch = SCRATCH, sample = SAMPLE_LIST),
    # reads where trimming entirely removed the mate
#    r1_unpaired = expand("{scratch}/trimmed/{sample}_1.unpaired.fastq.gz", scratch = SCRATCH, sample = SAMPLE_LIST),
#    r2_unpaired = expand("{scratch}/trimmed/{sample}_2.unpaired.fastq.gz", scratch = SCRATCH, sample = SAMPLE_LIST),

#rule fastqc:
#  input:    
#    expand("{rawfastq}/{sample}_{suf}_{num}.fastq.gz", rawfastq = INPUTDIR, sample = SAMPLE_LIST, suf = SAMPLE_SUFFIX, num = [1,2])
#  output:
#    html = expand("{scratch}/qc/fastqc/{sample}_{suf}_{num}_fastqc.html", scratch = SCRATCH, sample = SAMPLE_LIST, suf = SAMPLE_SUFFIX, num = [1,2]),
#    zip = expand("{scratch}/qc/fastqc/{sample}_{suf}_{num}_fastqc.zip", scratch = SCRATCH, sample = SAMPLE_LIST, suf = SAMPLE_SUFFIX, num = [1,2])
#  params: ""
#  log:
 #   expand("{scratch}/qc/fastqc/logs/{sample}_{suf}_{num}_fastqc.log", scratch = SCRATCH, sample = SAMPLE_LIST, suf = SAMPLE_SUFFIX, num = [1,2])
 # wrapper:
 #   "0.35.1/bio/fastqc"

rule trimmomatic_pe:
  input:
    r1 = INPUTDIR + "/{sample}_1.fastq.gz",
    r2 = INPUTDIR + "/{sample}_2.fastq.gz"
  output:
    r1 = SCRATCH + "/trimmed/{sample}_1.fastq.gz",
    r2 = SCRATCH + "/trimmed/{sample}_2.fastq.gz",
    # reads where trimming entirely removed the mate
    r1_unpaired = SCRATCH + "/trimmed/{sample}_1.unpaired.fastq.gz",
    r2_unpaired = SCRATCH + "/trimmed/{sample}_2.unpaired.fastq.gz"
  log:
    SCRATCH + "/trimmed/logs/trimmomatic/{sample}.log"
  params:
    trimmer = ["LEADING:2", "TRAILING:2", "SLIDINGWINDOW:4:2", "MINLEN:25"],
    extra = ""
  wrapper:
    "0.27.1/bio/trimmomatic/pe"
